# coding: utf-8

"""
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from circle import schemas  # noqa: F401


class Currency(
    schemas.EnumBase,
    schemas.StrBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneStrMixin
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    A currency associated with a balance or address.
    """


    class MetaOapg:
        enum_value_to_name = {
            "USD": "USD",
            "EUR": "EUR",
            "BTC": "BTC",
            "ETH": "ETH",
        }
    
    @schemas.classproperty
    def USD(cls):
        return cls("USD")
    
    @schemas.classproperty
    def EUR(cls):
        return cls("EUR")
    
    @schemas.classproperty
    def BTC(cls):
        return cls("BTC")
    
    @schemas.classproperty
    def ETH(cls):
        return cls("ETH")


    def __new__(
        cls,
        *_args: typing.Union[None, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'Currency':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
        )
