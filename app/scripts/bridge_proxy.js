
// Bridge proxy script - DO NOT EDIT
// This file is automatically generated and allows Python code to call TypeScript implementations

const { getBridgeProvider } = require('../payments/providers/factory');

async function main() {
    const action = process.argv[2];
    const params = JSON.parse(process.argv[3]);
    
    try {
        const bridge = getBridgeProvider();
        let result;
        
        if (action === 'onramp') {
            result = await bridge.onramp(
                params.amount,
                params.currency,
                params.srcChain,
                params.dstChain,
                params.recipient
            );
        } else if (action === 'offramp') {
            result = await bridge.offramp(
                params.amount,
                params.currency,
                params.chain,
                params.bankAccountId
            );
        } else {
            throw new Error(`Unknown action: ${action}`);
        }
        
        console.log(JSON.stringify(result));
        process.exit(0);
    } catch (error) {
        console.error(JSON.stringify({
            error: error.message || 'Unknown error',
            stack: error.stack
        }));
        process.exit(1);
    }
}

main().catch(error => {
    console.error(JSON.stringify({
        error: error.message || 'Unknown error',
        stack: error.stack
    }));
    process.exit(1);
});
